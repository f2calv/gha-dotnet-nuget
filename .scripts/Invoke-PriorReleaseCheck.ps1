#Check if a release (tag) already exists for the SemVer generated by GitVersion.
#If the release exists then we don't want to push the package as it'll fail
#with an error message 'package version x.x.x already exists'.

#Note: we assume that the release 'name' is simply the SemVer, i.e 'x.x.x'

Param(
    [Parameter(Mandatory = $true)][System.String][ValidateNotNullOrEmpty()]$SemVer = "0.1.31",
    [Parameter(Mandatory = $true)][System.String][ValidateNotNullOrEmpty()]$FullSemVer = "0.1.32-preview-test123"
)

Set-StrictMode -Version 3.0
$ErrorActionPreference = "Stop"

Write-Host "Current SemVer`t`t:`t$SemVer"
Write-Host "Current FullSemVer`t:`t$FullSemVer"

#Note: sadly gh cli doesn't have --json output on all commands so we parse the response manually.
$prior = (gh release list --limit 1)
$priorRelease = "0.0.0"
if ($null -ne $prior) {
    $priorRelease = $prior.Split("`t")[0]
}
Write-Host "Previous release`t:`t$priorRelease"

if (($SemVer -eq $priorRelease) -or ($FullSemVer -eq $priorRelease)) {
    Write-Host "Release already exists, continuing build/test/pack but skipping push..."
    return $false
}
else {
    Write-Host "Release not found, we are ok to build/test/pack/push the new package(s)..."
    return $true
}